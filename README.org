#+TITLE: Readme

* About

The configuration files for all the programs I use. I try to follow the xdg-config standard for storing configuration files, so most will be in the .config folder.

* Table of Contents :toc:
- [[#about][About]]
- [[#window-managers][Window Managers]]
  - [[#dwm][DWM]]
  - [[#xmonad][Xmonad]]
  - [[#awesome][Awesome]]
- [[#text-editors][Text editors]]
  - [[#neovim][Neovim]]
  - [[#emacs][Emacs]]
- [[#statistical-programing][Statistical programing]]
- [[#music][Music]]
  - [[#mpd][MPD]]
  - [[#mopidy][Mopidy]]
  - [[#ncmpcpp][NCMPCPP]]
  - [[#beets][Beets]]
  - [[#mpdscribble][mpdscribble]]
- [[#mail][Mail]]
  - [[#neomutt][Neomutt]]
- [[#terminals][Terminals]]
  - [[#kitty][Kitty]]
- [[#shells][Shells]]
  - [[#zsh][Zsh]]
  - [[#bash][Bash]]
- [[#other][Other]]
  - [[#file-manger-ranger][File manger (Ranger)]]

* Window Managers

Im a big fan of dynamic tiling window managers, they are fast, reliable, minimal and highly configurable. I particularly enjoy tinkering with WMs that are written and configured in the same language, as it give me a chance to learn new  and interesting languages.

** DWM
** Xmonad
** Awesome

* Text editors

There really are only two choices here. Emacs is more of a Lisp programming enviroment for manipulating text (it can do many things), while I prefer nvim for editing test. I am using the nightly build of neovim, and have configured it entirely in lua. There are some
amzaing packages being written for nvim in lua, but I dont think it is at the stage where it is competative with Emacs. Org-mode turns emacs into a development powerhouse.

** Neovim
** Emacs


* Statistical programing

I mainly use R, but at work I also use Stata and SAS if required

* Music

** MPD
** Mopidy
** NCMPCPP
** Beets
** mpdscribble

* Mail
** Neomutt


* Terminals
** Kitty

* Shells
** Zsh
** Bash

* Other
** File manger (Ranger)
